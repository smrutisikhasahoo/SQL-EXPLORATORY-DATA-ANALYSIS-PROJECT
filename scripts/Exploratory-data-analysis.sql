--EXPLORE ALL OBJECTS IN THE DATABASE(data exploration)
SELECT * FROM INFORMATION_SCHEMA.TABLES

--EXPLORE ALL COLMUNS IN THE DATABASE
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

-- explore all country our customers come from(step-2 --dimension exploration)
SELECT DISTINCT COUNTRY FROM gold.dim_customers

--EXPLORE ALL CATEGORIES "THE MAJOR DIVISION"
SELECT DISTINCT category,subcategory,product_name from gold.dim_products


--data exploration
--FIND THE FIRST AND LAST DATE OF ORDERS
--HOE MANY YEARS OF SALES ARE AVAILABLR
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date,
DATEDIFF(YEAR,MIN(order_date), MAX(order_date)) AS order_range_year,
DATEDIFF(MONTH,MIN(order_date), MAX(order_date)) AS order_range_month
FROM gold.fact_sales

--FIND YOUGEST AND OLDEST CUSTOMER
SELECT 
MIN(birthdate) AS oldest_birth_date,
DATEDIFF(YEAR,MIN(birthdate),GETDATE()) AS OLD_AGE,
MAX(birthdate) AS youngest_birth_date,
DATEDIFF(YEAR,MAX(birthdate),GETDATE()) AS YOUNG_AGE
FROM gold.dim_customers

--MEASURES EXPLORATION

--FIND THE TOTAL SALES

SELECT SUM(sales_amount) AS TOTAL_SALES FROM gold.fact_sales

--FIND HOW MANY ITEMS ARE SOLD

SELECT SUM(quantity) AS TOTAL_QUANTITY FROM gold.fact_sales

--FIND THE AVERAGE SELLING PRICE

SELECT AVG(price) AS AVG_PRICE FROM gold.fact_sales

--FIND TOTAL NUMBERS OF ORDERS

SELECT COUNT(order_name) AS total_orders FROM gold.fact_sales
SELECT COUNT(DISTINCT order_name) AS total_orders FROM gold.fact_sales--FILTER DUPLICATE ORDERS

--FIND TOTAL NUMBERS OF PRODUCTS

SELECT COUNT(product_name) AS total_PRODUCT FROM gold.dim_products
SELECT COUNT(DISTINCT product_name) AS total_PRODUCTS FROM gold.dim_products--FILTER DUPLICATE ORDERS

--FIND TOTAL NUMBERS OF CUSTOMERS

SELECT COUNT(customer_key) AS total_customer FROM gold.dim_customers

--FIND TOTAL NUMBERS OF CUSTOMERS THAT HAS PLACED AN ORDERS

SELECT COUNT(DISTINCT customer_key) AS total_customer_PLACE_ORDERS FROM gold.dim_customers

SELECT COUNT(DISTINCT customer_key) AS total_customer_place_orders FROM gold.fact_sales


--GENERATE A REPORT THAT SHOWS ALL KEY METRICES OF THE BUSINESS
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' , SUM(quantity)  FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Orders ', COUNT(DISTINCT order_name) FROM gold.fact_sales
UNION ALL
SELECT 'Total Products', COUNT(DISTINCT product_name)  FROM gold.dim_products
UNION ALL
SELECT 'Total products2' , COUNT(product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total Products3', COUNT(DISTINCT product_name)  FROM gold.dim_products
UNION ALL
SELECT 'Total Customer ' , COUNT(customer_key) FROM gold.dim_customers
UNION ALL
SELECT 'Total Customer Place Orders ' , COUNT(DISTINCT customer_key)  FROM gold.fact_sales


--find the total customers by country

SELECT
	country,
	COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC


--find total customers by gender

SELECT
	gender,
	COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC


--find total products by category

SELECT
	category,
	COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC


--what is the average costs in each category?


SELECT
	category,
	AVG(cost) AS avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC



--what is the total revenue generated for each category?

SELECT
P.category,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN  gold.dim_products P
ON F.product_key = P.product_key
GROUP BY P.category
ORDER BY  total_revenue DESC

--find total revenue is generated by each customers

SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN  gold.dim_customers c
ON F.customer_key = c.customer_key
GROUP BY 
c.customer_key,
c.first_name,
c.last_name
ORDER BY  total_revenue DESC

--what is the distributions of sold items across countries?

SELECT
c.country,
SUM(f.quantity) total_quantity_sold
FROM gold.fact_sales f
LEFT JOIN  gold.dim_customers c
ON F.customer_key = c.customer_key
GROUP BY 
c.country
ORDER BY  total_quantity_sold DESC


--ranking 
--which 5 products generate the highest revenue?

SELECT TOP 5
P.product_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN  gold.dim_products P
ON F.product_key = P.product_key
GROUP BY P.product_name
ORDER BY  total_revenue DESC

--USING WINDOW FUNCTION
SELECT*
FROM(
		SELECT
		P.product_name,
		SUM(f.sales_amount) total_revenue,
		ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount)DESC) AS RANK_PRODUCTS
		FROM gold.fact_sales f
		LEFT JOIN  gold.dim_products P
		ON F.product_key = P.product_key
		GROUP BY P.product_name
		)T 
WHERE RANK_PRODUCTS <= 5


--which 5 WORST products generate the LOWEST revenue?

SELECT TOP 5
P.product_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN  gold.dim_products P
ON F.product_key = P.product_key
GROUP BY P.product_name
ORDER BY  total_revenue 





-- what are the 5 BEST performing SUB-CATEGORY in terms of sales?

SELECT TOP 5
P.subcategory,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN  gold.dim_products P
ON F.product_key = P.product_key
GROUP BY P.subcategory
ORDER BY  total_revenue DESC


-- what are the 5 worst performing SUB-CATEGORY in terms of sales?

SELECT TOP 5
P.product_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN  gold.dim_products P
ON F.product_key = P.product_key
GROUP BY P.product_name
ORDER BY  total_revenue 


